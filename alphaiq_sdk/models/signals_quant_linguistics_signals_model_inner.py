# coding: utf-8

"""
    AlphaIQ API

    Quantitative Linguistics is the Future of Investment Research

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, Field, StrictFloat, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Union
from typing import Optional, Set
from typing_extensions import Self

class SignalsQuantLinguisticsSignalsModelInner(BaseModel):
    """
    SignalsQuantLinguisticsSignalsModelInner
    """ # noqa: E501
    var_date: StrictStr = Field(alias="date")
    q001: Union[StrictFloat, StrictInt] = Field(alias="Q001")
    q002: Union[StrictFloat, StrictInt] = Field(alias="Q002")
    q003: Union[StrictFloat, StrictInt] = Field(alias="Q003")
    q004: Union[StrictFloat, StrictInt] = Field(alias="Q004")
    q005: Union[StrictFloat, StrictInt] = Field(alias="Q005")
    q006: Union[StrictFloat, StrictInt] = Field(alias="Q006")
    q007: Union[StrictFloat, StrictInt] = Field(alias="Q007")
    q008: Union[StrictFloat, StrictInt] = Field(alias="Q008")
    q009: StrictStr = Field(alias="Q009")
    q010: Union[StrictFloat, StrictInt] = Field(alias="Q010")
    q011: StrictStr = Field(alias="Q011")
    q012: StrictStr = Field(alias="Q012")
    q013: Union[StrictFloat, StrictInt] = Field(alias="Q013")
    q014: Union[StrictFloat, StrictInt] = Field(alias="Q014")
    q015: Union[StrictFloat, StrictInt] = Field(alias="Q015")
    q016: StrictStr = Field(alias="Q016")
    q017: StrictStr = Field(alias="Q017")
    q018: Union[StrictFloat, StrictInt] = Field(alias="Q018")
    q019: Union[StrictFloat, StrictInt] = Field(alias="Q019")
    q020: Union[StrictFloat, StrictInt] = Field(alias="Q020")
    q021: Union[StrictFloat, StrictInt] = Field(alias="Q021")
    q022: StrictStr = Field(alias="Q022")
    q023: Union[StrictFloat, StrictInt] = Field(alias="Q023")
    q024: StrictStr = Field(alias="Q024")
    q025: StrictStr = Field(alias="Q025")
    q026: Union[StrictFloat, StrictInt] = Field(alias="Q026")
    q027: StrictStr = Field(alias="Q027")
    q028: StrictStr = Field(alias="Q028")
    q029: StrictStr = Field(alias="Q029")
    q030: Union[StrictFloat, StrictInt] = Field(alias="Q030")
    q031: StrictStr = Field(alias="Q031")
    q032: Union[StrictFloat, StrictInt] = Field(alias="Q032")
    q033: StrictStr = Field(alias="Q033")
    q034: Union[StrictFloat, StrictInt] = Field(alias="Q034")
    q035: StrictStr = Field(alias="Q035")
    q036: StrictStr = Field(alias="Q036")
    q041: StrictInt = Field(alias="Q041")
    q042: StrictStr = Field(alias="Q042")
    q043: StrictStr = Field(alias="Q043")
    q044: StrictStr = Field(alias="Q044")
    q045: StrictInt = Field(alias="Q045")
    q046: StrictInt = Field(alias="Q046")
    q047: Union[StrictFloat, StrictInt] = Field(alias="Q047")
    q048: StrictInt = Field(alias="Q048")
    q049: StrictInt = Field(alias="Q049")
    __properties: ClassVar[List[str]] = ["date", "Q001", "Q002", "Q003", "Q004", "Q005", "Q006", "Q007", "Q008", "Q009", "Q010", "Q011", "Q012", "Q013", "Q014", "Q015", "Q016", "Q017", "Q018", "Q019", "Q020", "Q021", "Q022", "Q023", "Q024", "Q025", "Q026", "Q027", "Q028", "Q029", "Q030", "Q031", "Q032", "Q033", "Q034", "Q035", "Q036", "Q041", "Q042", "Q043", "Q044", "Q045", "Q046", "Q047", "Q048", "Q049"]

    model_config = {
        "populate_by_name": True,
        "validate_assignment": True,
        "protected_namespaces": (),
    }


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of SignalsQuantLinguisticsSignalsModelInner from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of SignalsQuantLinguisticsSignalsModelInner from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "date": obj.get("date"),
            "Q001": obj.get("Q001"),
            "Q002": obj.get("Q002"),
            "Q003": obj.get("Q003"),
            "Q004": obj.get("Q004"),
            "Q005": obj.get("Q005"),
            "Q006": obj.get("Q006"),
            "Q007": obj.get("Q007"),
            "Q008": obj.get("Q008"),
            "Q009": obj.get("Q009"),
            "Q010": obj.get("Q010"),
            "Q011": obj.get("Q011"),
            "Q012": obj.get("Q012"),
            "Q013": obj.get("Q013"),
            "Q014": obj.get("Q014"),
            "Q015": obj.get("Q015"),
            "Q016": obj.get("Q016"),
            "Q017": obj.get("Q017"),
            "Q018": obj.get("Q018"),
            "Q019": obj.get("Q019"),
            "Q020": obj.get("Q020"),
            "Q021": obj.get("Q021"),
            "Q022": obj.get("Q022"),
            "Q023": obj.get("Q023"),
            "Q024": obj.get("Q024"),
            "Q025": obj.get("Q025"),
            "Q026": obj.get("Q026"),
            "Q027": obj.get("Q027"),
            "Q028": obj.get("Q028"),
            "Q029": obj.get("Q029"),
            "Q030": obj.get("Q030"),
            "Q031": obj.get("Q031"),
            "Q032": obj.get("Q032"),
            "Q033": obj.get("Q033"),
            "Q034": obj.get("Q034"),
            "Q035": obj.get("Q035"),
            "Q036": obj.get("Q036"),
            "Q041": obj.get("Q041"),
            "Q042": obj.get("Q042"),
            "Q043": obj.get("Q043"),
            "Q044": obj.get("Q044"),
            "Q045": obj.get("Q045"),
            "Q046": obj.get("Q046"),
            "Q047": obj.get("Q047"),
            "Q048": obj.get("Q048"),
            "Q049": obj.get("Q049")
        })
        return _obj


