# coding: utf-8

"""
    AlphaIQ API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from alphaiq_sdk.configuration import Configuration


class InlineResponse20024DataSpinsightsContent(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'spinsights_title': 'str',
        'spinsights_asof_date': 'str',
        'spindex_summary': 'str',
        'final_article': 'str',
        'final_topics': 'str',
        'article_part1': 'str',
        'part1_topics': 'str',
        'article_part2': 'str',
        'part2_topics': 'str',
        'article_part3': 'str',
        'part3_topics': 'str'
    }

    attribute_map = {
        'spinsights_title': 'spinsights_title',
        'spinsights_asof_date': 'spinsights_asof_date',
        'spindex_summary': 'spindex_summary',
        'final_article': 'final_article',
        'final_topics': 'final_topics',
        'article_part1': 'article_part1',
        'part1_topics': 'part1_topics',
        'article_part2': 'article_part2',
        'part2_topics': 'part2_topics',
        'article_part3': 'article_part3',
        'part3_topics': 'part3_topics'
    }

    def __init__(self, spinsights_title=None, spinsights_asof_date=None, spindex_summary=None, final_article=None, final_topics=None, article_part1=None, part1_topics=None, article_part2=None, part2_topics=None, article_part3=None, part3_topics=None, local_vars_configuration=None):  # noqa: E501
        """InlineResponse20024DataSpinsightsContent - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._spinsights_title = None
        self._spinsights_asof_date = None
        self._spindex_summary = None
        self._final_article = None
        self._final_topics = None
        self._article_part1 = None
        self._part1_topics = None
        self._article_part2 = None
        self._part2_topics = None
        self._article_part3 = None
        self._part3_topics = None
        self.discriminator = None

        self.spinsights_title = spinsights_title
        self.spinsights_asof_date = spinsights_asof_date
        self.spindex_summary = spindex_summary
        self.final_article = final_article
        self.final_topics = final_topics
        self.article_part1 = article_part1
        self.part1_topics = part1_topics
        self.article_part2 = article_part2
        self.part2_topics = part2_topics
        self.article_part3 = article_part3
        self.part3_topics = part3_topics

    @property
    def spinsights_title(self):
        """Gets the spinsights_title of this InlineResponse20024DataSpinsightsContent.  # noqa: E501


        :return: The spinsights_title of this InlineResponse20024DataSpinsightsContent.  # noqa: E501
        :rtype: str
        """
        return self._spinsights_title

    @spinsights_title.setter
    def spinsights_title(self, spinsights_title):
        """Sets the spinsights_title of this InlineResponse20024DataSpinsightsContent.


        :param spinsights_title: The spinsights_title of this InlineResponse20024DataSpinsightsContent.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and spinsights_title is None:  # noqa: E501
            raise ValueError("Invalid value for `spinsights_title`, must not be `None`")  # noqa: E501

        self._spinsights_title = spinsights_title

    @property
    def spinsights_asof_date(self):
        """Gets the spinsights_asof_date of this InlineResponse20024DataSpinsightsContent.  # noqa: E501


        :return: The spinsights_asof_date of this InlineResponse20024DataSpinsightsContent.  # noqa: E501
        :rtype: str
        """
        return self._spinsights_asof_date

    @spinsights_asof_date.setter
    def spinsights_asof_date(self, spinsights_asof_date):
        """Sets the spinsights_asof_date of this InlineResponse20024DataSpinsightsContent.


        :param spinsights_asof_date: The spinsights_asof_date of this InlineResponse20024DataSpinsightsContent.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and spinsights_asof_date is None:  # noqa: E501
            raise ValueError("Invalid value for `spinsights_asof_date`, must not be `None`")  # noqa: E501

        self._spinsights_asof_date = spinsights_asof_date

    @property
    def spindex_summary(self):
        """Gets the spindex_summary of this InlineResponse20024DataSpinsightsContent.  # noqa: E501


        :return: The spindex_summary of this InlineResponse20024DataSpinsightsContent.  # noqa: E501
        :rtype: str
        """
        return self._spindex_summary

    @spindex_summary.setter
    def spindex_summary(self, spindex_summary):
        """Sets the spindex_summary of this InlineResponse20024DataSpinsightsContent.


        :param spindex_summary: The spindex_summary of this InlineResponse20024DataSpinsightsContent.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and spindex_summary is None:  # noqa: E501
            raise ValueError("Invalid value for `spindex_summary`, must not be `None`")  # noqa: E501

        self._spindex_summary = spindex_summary

    @property
    def final_article(self):
        """Gets the final_article of this InlineResponse20024DataSpinsightsContent.  # noqa: E501


        :return: The final_article of this InlineResponse20024DataSpinsightsContent.  # noqa: E501
        :rtype: str
        """
        return self._final_article

    @final_article.setter
    def final_article(self, final_article):
        """Sets the final_article of this InlineResponse20024DataSpinsightsContent.


        :param final_article: The final_article of this InlineResponse20024DataSpinsightsContent.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and final_article is None:  # noqa: E501
            raise ValueError("Invalid value for `final_article`, must not be `None`")  # noqa: E501

        self._final_article = final_article

    @property
    def final_topics(self):
        """Gets the final_topics of this InlineResponse20024DataSpinsightsContent.  # noqa: E501


        :return: The final_topics of this InlineResponse20024DataSpinsightsContent.  # noqa: E501
        :rtype: str
        """
        return self._final_topics

    @final_topics.setter
    def final_topics(self, final_topics):
        """Sets the final_topics of this InlineResponse20024DataSpinsightsContent.


        :param final_topics: The final_topics of this InlineResponse20024DataSpinsightsContent.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and final_topics is None:  # noqa: E501
            raise ValueError("Invalid value for `final_topics`, must not be `None`")  # noqa: E501

        self._final_topics = final_topics

    @property
    def article_part1(self):
        """Gets the article_part1 of this InlineResponse20024DataSpinsightsContent.  # noqa: E501


        :return: The article_part1 of this InlineResponse20024DataSpinsightsContent.  # noqa: E501
        :rtype: str
        """
        return self._article_part1

    @article_part1.setter
    def article_part1(self, article_part1):
        """Sets the article_part1 of this InlineResponse20024DataSpinsightsContent.


        :param article_part1: The article_part1 of this InlineResponse20024DataSpinsightsContent.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and article_part1 is None:  # noqa: E501
            raise ValueError("Invalid value for `article_part1`, must not be `None`")  # noqa: E501

        self._article_part1 = article_part1

    @property
    def part1_topics(self):
        """Gets the part1_topics of this InlineResponse20024DataSpinsightsContent.  # noqa: E501


        :return: The part1_topics of this InlineResponse20024DataSpinsightsContent.  # noqa: E501
        :rtype: str
        """
        return self._part1_topics

    @part1_topics.setter
    def part1_topics(self, part1_topics):
        """Sets the part1_topics of this InlineResponse20024DataSpinsightsContent.


        :param part1_topics: The part1_topics of this InlineResponse20024DataSpinsightsContent.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and part1_topics is None:  # noqa: E501
            raise ValueError("Invalid value for `part1_topics`, must not be `None`")  # noqa: E501

        self._part1_topics = part1_topics

    @property
    def article_part2(self):
        """Gets the article_part2 of this InlineResponse20024DataSpinsightsContent.  # noqa: E501


        :return: The article_part2 of this InlineResponse20024DataSpinsightsContent.  # noqa: E501
        :rtype: str
        """
        return self._article_part2

    @article_part2.setter
    def article_part2(self, article_part2):
        """Sets the article_part2 of this InlineResponse20024DataSpinsightsContent.


        :param article_part2: The article_part2 of this InlineResponse20024DataSpinsightsContent.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and article_part2 is None:  # noqa: E501
            raise ValueError("Invalid value for `article_part2`, must not be `None`")  # noqa: E501

        self._article_part2 = article_part2

    @property
    def part2_topics(self):
        """Gets the part2_topics of this InlineResponse20024DataSpinsightsContent.  # noqa: E501


        :return: The part2_topics of this InlineResponse20024DataSpinsightsContent.  # noqa: E501
        :rtype: str
        """
        return self._part2_topics

    @part2_topics.setter
    def part2_topics(self, part2_topics):
        """Sets the part2_topics of this InlineResponse20024DataSpinsightsContent.


        :param part2_topics: The part2_topics of this InlineResponse20024DataSpinsightsContent.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and part2_topics is None:  # noqa: E501
            raise ValueError("Invalid value for `part2_topics`, must not be `None`")  # noqa: E501

        self._part2_topics = part2_topics

    @property
    def article_part3(self):
        """Gets the article_part3 of this InlineResponse20024DataSpinsightsContent.  # noqa: E501


        :return: The article_part3 of this InlineResponse20024DataSpinsightsContent.  # noqa: E501
        :rtype: str
        """
        return self._article_part3

    @article_part3.setter
    def article_part3(self, article_part3):
        """Sets the article_part3 of this InlineResponse20024DataSpinsightsContent.


        :param article_part3: The article_part3 of this InlineResponse20024DataSpinsightsContent.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and article_part3 is None:  # noqa: E501
            raise ValueError("Invalid value for `article_part3`, must not be `None`")  # noqa: E501

        self._article_part3 = article_part3

    @property
    def part3_topics(self):
        """Gets the part3_topics of this InlineResponse20024DataSpinsightsContent.  # noqa: E501


        :return: The part3_topics of this InlineResponse20024DataSpinsightsContent.  # noqa: E501
        :rtype: str
        """
        return self._part3_topics

    @part3_topics.setter
    def part3_topics(self, part3_topics):
        """Sets the part3_topics of this InlineResponse20024DataSpinsightsContent.


        :param part3_topics: The part3_topics of this InlineResponse20024DataSpinsightsContent.  # noqa: E501
        :type: str
        """
        if self.local_vars_configuration.client_side_validation and part3_topics is None:  # noqa: E501
            raise ValueError("Invalid value for `part3_topics`, must not be `None`")  # noqa: E501

        self._part3_topics = part3_topics

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20024DataSpinsightsContent):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, InlineResponse20024DataSpinsightsContent):
            return True

        return self.to_dict() != other.to_dict()
