# coding: utf-8

"""
    AlphaIQ API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from openapi_client.configuration import Configuration


class InlineResponse20011Data(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'lvl2_industries_with_latest_avg_overallrisk': 'list[InlineResponse20011DataLvl2IndustriesWithLatestAvgOverallrisk]',
        'lvl3_industries_with_latest_avg_overallrisk': 'list[InlineResponse20011DataLvl3IndustriesWithLatestAvgOverallrisk]',
        'lvl4_industries_with_latest_overallrisk': 'list[InlineResponse20011DataLvl3IndustriesWithLatestAvgOverallrisk]'
    }

    attribute_map = {
        'lvl2_industries_with_latest_avg_overallrisk': 'lvl2IndustriesWithLatestAvgOverallrisk',
        'lvl3_industries_with_latest_avg_overallrisk': 'lvl3IndustriesWithLatestAvgOverallrisk',
        'lvl4_industries_with_latest_overallrisk': 'lvl4IndustriesWithLatestOverallrisk'
    }

    def __init__(self, lvl2_industries_with_latest_avg_overallrisk=None, lvl3_industries_with_latest_avg_overallrisk=None, lvl4_industries_with_latest_overallrisk=None, local_vars_configuration=None):  # noqa: E501
        """InlineResponse20011Data - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._lvl2_industries_with_latest_avg_overallrisk = None
        self._lvl3_industries_with_latest_avg_overallrisk = None
        self._lvl4_industries_with_latest_overallrisk = None
        self.discriminator = None

        self.lvl2_industries_with_latest_avg_overallrisk = lvl2_industries_with_latest_avg_overallrisk
        self.lvl3_industries_with_latest_avg_overallrisk = lvl3_industries_with_latest_avg_overallrisk
        self.lvl4_industries_with_latest_overallrisk = lvl4_industries_with_latest_overallrisk

    @property
    def lvl2_industries_with_latest_avg_overallrisk(self):
        """Gets the lvl2_industries_with_latest_avg_overallrisk of this InlineResponse20011Data.  # noqa: E501


        :return: The lvl2_industries_with_latest_avg_overallrisk of this InlineResponse20011Data.  # noqa: E501
        :rtype: list[InlineResponse20011DataLvl2IndustriesWithLatestAvgOverallrisk]
        """
        return self._lvl2_industries_with_latest_avg_overallrisk

    @lvl2_industries_with_latest_avg_overallrisk.setter
    def lvl2_industries_with_latest_avg_overallrisk(self, lvl2_industries_with_latest_avg_overallrisk):
        """Sets the lvl2_industries_with_latest_avg_overallrisk of this InlineResponse20011Data.


        :param lvl2_industries_with_latest_avg_overallrisk: The lvl2_industries_with_latest_avg_overallrisk of this InlineResponse20011Data.  # noqa: E501
        :type: list[InlineResponse20011DataLvl2IndustriesWithLatestAvgOverallrisk]
        """
        if self.local_vars_configuration.client_side_validation and lvl2_industries_with_latest_avg_overallrisk is None:  # noqa: E501
            raise ValueError("Invalid value for `lvl2_industries_with_latest_avg_overallrisk`, must not be `None`")  # noqa: E501

        self._lvl2_industries_with_latest_avg_overallrisk = lvl2_industries_with_latest_avg_overallrisk

    @property
    def lvl3_industries_with_latest_avg_overallrisk(self):
        """Gets the lvl3_industries_with_latest_avg_overallrisk of this InlineResponse20011Data.  # noqa: E501


        :return: The lvl3_industries_with_latest_avg_overallrisk of this InlineResponse20011Data.  # noqa: E501
        :rtype: list[InlineResponse20011DataLvl3IndustriesWithLatestAvgOverallrisk]
        """
        return self._lvl3_industries_with_latest_avg_overallrisk

    @lvl3_industries_with_latest_avg_overallrisk.setter
    def lvl3_industries_with_latest_avg_overallrisk(self, lvl3_industries_with_latest_avg_overallrisk):
        """Sets the lvl3_industries_with_latest_avg_overallrisk of this InlineResponse20011Data.


        :param lvl3_industries_with_latest_avg_overallrisk: The lvl3_industries_with_latest_avg_overallrisk of this InlineResponse20011Data.  # noqa: E501
        :type: list[InlineResponse20011DataLvl3IndustriesWithLatestAvgOverallrisk]
        """
        if self.local_vars_configuration.client_side_validation and lvl3_industries_with_latest_avg_overallrisk is None:  # noqa: E501
            raise ValueError("Invalid value for `lvl3_industries_with_latest_avg_overallrisk`, must not be `None`")  # noqa: E501

        self._lvl3_industries_with_latest_avg_overallrisk = lvl3_industries_with_latest_avg_overallrisk

    @property
    def lvl4_industries_with_latest_overallrisk(self):
        """Gets the lvl4_industries_with_latest_overallrisk of this InlineResponse20011Data.  # noqa: E501


        :return: The lvl4_industries_with_latest_overallrisk of this InlineResponse20011Data.  # noqa: E501
        :rtype: list[InlineResponse20011DataLvl3IndustriesWithLatestAvgOverallrisk]
        """
        return self._lvl4_industries_with_latest_overallrisk

    @lvl4_industries_with_latest_overallrisk.setter
    def lvl4_industries_with_latest_overallrisk(self, lvl4_industries_with_latest_overallrisk):
        """Sets the lvl4_industries_with_latest_overallrisk of this InlineResponse20011Data.


        :param lvl4_industries_with_latest_overallrisk: The lvl4_industries_with_latest_overallrisk of this InlineResponse20011Data.  # noqa: E501
        :type: list[InlineResponse20011DataLvl3IndustriesWithLatestAvgOverallrisk]
        """
        if self.local_vars_configuration.client_side_validation and lvl4_industries_with_latest_overallrisk is None:  # noqa: E501
            raise ValueError("Invalid value for `lvl4_industries_with_latest_overallrisk`, must not be `None`")  # noqa: E501

        self._lvl4_industries_with_latest_overallrisk = lvl4_industries_with_latest_overallrisk

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20011Data):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, InlineResponse20011Data):
            return True

        return self.to_dict() != other.to_dict()
