# coding: utf-8

"""
    AlphaIQ API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.inline_response20013_data import InlineResponse20013Data  # noqa: E501
from openapi_client.rest import ApiException

class TestInlineResponse20013Data(unittest.TestCase):
    """InlineResponse20013Data unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test InlineResponse20013Data
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.inline_response20013_data.InlineResponse20013Data()  # noqa: E501
        if include_optional :
            return InlineResponse20013Data(
                lvl4_industry_name = '0', 
                lvl4_overallrisk_value = 56, 
                overallrisk_change_4_w = 56, 
                company_name = '0', 
                lvl3_industry_name = '0', 
                lvl2_overallrisk_value = 56, 
                ticker = '0', 
                cik = '0', 
                as_of_date = '0', 
                lvl2_industry_name = '0', 
                lvl3_overallrisk_value = 56, 
                entity_type = '0', 
                overallrisk_value = 56
            )
        else :
            return InlineResponse20013Data(
                lvl4_industry_name = '0',
                lvl4_overallrisk_value = 56,
                overallrisk_change_4_w = 56,
                company_name = '0',
                lvl3_industry_name = '0',
                lvl2_overallrisk_value = 56,
                ticker = '0',
                cik = '0',
                as_of_date = '0',
                lvl2_industry_name = '0',
                lvl3_overallrisk_value = 56,
                entity_type = '0',
                overallrisk_value = 56,
        )

    def testInlineResponse20013Data(self):
        """Test InlineResponse20013Data"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
