# coding: utf-8

"""
    AlphaIQ API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import alphaiq_sdk
from alphaiq_sdk.models.inline_response20018 import InlineResponse20018  # noqa: E501
from alphaiq_sdk.rest import ApiException

class TestInlineResponse20018(unittest.TestCase):
    """InlineResponse20018 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test InlineResponse20018
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = alphaiq_sdk.models.inline_response20018.InlineResponse20018()  # noqa: E501
        if include_optional :
            return InlineResponse20018(
                data = alphaiq_sdk.models.inline_response_200_18_data.inline_response_200_18_data(
                    chevron_corp/_(cvx) = [
                        alphaiq_sdk.models.inline_response_200_18_data_chevron_corp___cvx_.inline_response_200_18_data_Chevron_Corp___CVX_(
                            date = '0', 
                            overallrisk = 56, )
                        ], )
            )
        else :
            return InlineResponse20018(
                data = alphaiq_sdk.models.inline_response_200_18_data.inline_response_200_18_data(
                    chevron_corp/_(cvx) = [
                        alphaiq_sdk.models.inline_response_200_18_data_chevron_corp___cvx_.inline_response_200_18_data_Chevron_Corp___CVX_(
                            date = '0', 
                            overallrisk = 56, )
                        ], ),
        )

    def testInlineResponse20018(self):
        """Test InlineResponse20018"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
